name: CI/CD Pipeline
on:
  push:
    branches: [ master ]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install PHP and dependencies
      run: sudo apt-get update && sudo apt-get install php php-mbstring php-xml

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.SSH_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SSH_PRIVATE_KEY }}
        aws-region: us-east-1

    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/master'
    steps:
     # Step 1
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.SSH_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SSH_PRIVATE_KEY }}
        aws-region: us-east-1
     # Step 2
    - name: Create CodeDeploy Deployment
      id: deploy
      run: |
        aws deploy create-deployment \
          --application-name JitumeCICD \
          --deployment-group-name JitumeCICDGroup \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
            